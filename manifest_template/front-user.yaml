#   Copyright 2021 NEC Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
apiVersion: v1
kind: ConfigMap
metadata:
  name: sso-authc-info
  # namespace: # don't set
data:
  GOOGLE_CLIENT_ID: "{{ param01 }}"
  GITHUB_CLIENT_ID: "{{ param02 }}"
  TWITTER_CLIENT_ID: "{{ param03 }}"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: session-manage-info-front-user
  # namespace: # don't set
data:
  SECRET_KEY: "" # If empty, generate random secret. (secrets.token_hex(16))
  REDIS_URL: "redis://session-db:6379"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: service-container-info-front-user
  # namespace: # don't set
data:
  EVENT_PROTOCOL: "http"
  EVENT_HOST: "event-user.{{ param04 }}.svc.cluster.local" # set namespace
  EVENT_PORT: "8080"
  SPEAKER_PROTOCOL: "http"
  SPEAKER_HOST: "speaker-user.{{ param04 }}.svc.cluster.local" # set namespace
  SPEAKER_PORT: "8080"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-user
  # namespace: # don't set
spec:
  selector:
    matchLabels:
      name: front-user
  replicas: {{ param05 }}
  template:
    metadata:
      labels:
        name: front-user
    spec:
      containers:
      - name: front-user
        image: "{{ image }}:{{ image_tag }}"
        envFrom:
        - prefix: SERVICE_
          configMapRef:
            name: service-container-info-front-user
        - prefix: SSO_
          configMapRef:
            name: sso-authc-info
        - configMapRef:
            name: session-manage-info-front-user
        env:
        - name: LC_ALL
          value: C.UTF-8
        - name: LANG
          value: C.UTF-8
        - name: PYTHONIOENCODING
          value: utf-8
        - name: HTTP_PROXY
          value: "{{ param06 }}"
        - name: HTTPS_PROXY
          value: "{{ param07 }}"
        - name: NO_PROXY
          value: ".{{ param04 }}.svc.cluster.local" # set namespace

---
apiVersion: v1
kind: Service
metadata:
  name: front-user
  labels:
    name: front-user
  # namespace: # don't set
spec:
  type: NodePort
  ports:
  - name: flask
    port: 5000
    targetPort: 5000
    nodePort: {{ param08 }} # set access_port
  selector:
    name: front-user
